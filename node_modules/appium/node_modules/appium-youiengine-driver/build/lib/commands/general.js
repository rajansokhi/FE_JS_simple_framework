"use strict";

var _regeneratorRuntime = require("babel-runtime/regenerator")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
var commands = {};

commands.getPageSource = function callee$0$0() {
  var source, commandObject, commandJSON;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        source = undefined;
        commandObject = {
          name: 'GetSRC'
        };
        commandJSON = JSON.stringify(commandObject);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeSocketCommand(commandJSON));

      case 5:
        source = context$1$0.sent;

        if (!source) {
          context$1$0.next = 10;
          break;
        }

        return context$1$0.abrupt("return", source.toString());

      case 10:
        throw new Error("Bad response from getTreeForXML");

      case 11:
      case "end":
        return context$1$0.stop();
    }
  }, null, this);
};

exports["default"] = commands;
module.exports = exports["default"];

// this should never happen but we've received bug reports; this will help us track down
// what's wrong in getTreeForXML
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9nZW5lcmFsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7O0FBRWxCLFFBQVEsQ0FBQyxhQUFhLEdBQUc7TUFFbkIsTUFBTSxFQUVOLGFBQWEsRUFHYixXQUFXOzs7O0FBTFgsY0FBTTtBQUVOLHFCQUFhLEdBQUc7QUFDbEIsY0FBSSxFQUFFLFFBQVE7U0FDZjtBQUNHLG1CQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7O3lDQUVoQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxDQUFDOzs7QUFBckQsY0FBTTs7YUFFRixNQUFNOzs7Ozs0Q0FDRCxNQUFNLENBQUMsUUFBUSxFQUFFOzs7Y0FJbEIsSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUM7Ozs7Ozs7Q0FFckQsQ0FBQzs7cUJBRWEsUUFBUSIsImZpbGUiOiJsaWIvY29tbWFuZHMvZ2VuZXJhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBjb21tYW5kcyA9IHt9O1xuXG5jb21tYW5kcy5nZXRQYWdlU291cmNlID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuXG4gIGxldCBzb3VyY2U7XG5cbiAgdmFyIGNvbW1hbmRPYmplY3QgPSB7XG4gICAgbmFtZTogJ0dldFNSQydcbiAgfTtcbiAgdmFyIGNvbW1hbmRKU09OID0gSlNPTi5zdHJpbmdpZnkoY29tbWFuZE9iamVjdCk7XG5cbiAgc291cmNlID0gYXdhaXQgdGhpcy5leGVjdXRlU29ja2V0Q29tbWFuZChjb21tYW5kSlNPTik7XG5cbiAgaWYgKHNvdXJjZSkge1xuICAgIHJldHVybiBzb3VyY2UudG9TdHJpbmcoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyB0aGlzIHNob3VsZCBuZXZlciBoYXBwZW4gYnV0IHdlJ3ZlIHJlY2VpdmVkIGJ1ZyByZXBvcnRzOyB0aGlzIHdpbGwgaGVscCB1cyB0cmFjayBkb3duXG4gICAgLy8gd2hhdCdzIHdyb25nIGluIGdldFRyZWVGb3JYTUxcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJCYWQgcmVzcG9uc2UgZnJvbSBnZXRUcmVlRm9yWE1MXCIpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb21tYW5kcztcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
