'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var extensions = {},
    commands = {};

commands.setWifiState = function callee$0$0(wifi) {
  var type;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        type = wifi << 1;
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.uiautomator2.jwproxy.command('/network_connection', 'POST', { type: type }));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 7:
        context$1$0.prev = 7;
        context$1$0.t0 = context$1$0['catch'](1);

        _logger2['default'].error('Unable to set Network connection to WIFI, retrying with adb command. ERROR:: ' + context$1$0.t0.message);
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.adb.setWifiState(wifi));

      case 12:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 7]]);
};

_Object$assign(extensions, commands);
exports.commands = commands;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9uZXR3b3JrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztzQkFBZ0IsV0FBVzs7OztBQUUzQixJQUFJLFVBQVUsR0FBRyxFQUFFO0lBQUUsUUFBUSxHQUFHLEVBQUUsQ0FBQzs7QUFFbkMsUUFBUSxDQUFDLFlBQVksR0FBRyxvQkFBZSxJQUFJO01BQ3JDLElBQUk7Ozs7QUFBSixZQUFJLEdBQUcsSUFBSSxJQUFJLENBQUM7Ozt5Q0FFTCxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMscUJBQXFCLEVBQUUsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFKLElBQUksRUFBQyxDQUFDOzs7Ozs7Ozs7QUFFckYsNEJBQUksS0FBSyxtRkFBaUYsZUFBTSxPQUFPLENBQUcsQ0FBQzs7eUNBQ3JHLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQzs7Ozs7OztDQUVwQyxDQUFDOztBQUVGLGVBQWMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzNCLFFBQVEsR0FBUixRQUFRO3FCQUNGLFVBQVUiLCJmaWxlIjoibGliL2NvbW1hbmRzL25ldHdvcmsuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9nIGZyb20gJy4uL2xvZ2dlcic7XG5cbmxldCBleHRlbnNpb25zID0ge30sIGNvbW1hbmRzID0ge307XG5cbmNvbW1hbmRzLnNldFdpZmlTdGF0ZSA9IGFzeW5jIGZ1bmN0aW9uKHdpZmkpIHtcbiAgbGV0IHR5cGUgPSB3aWZpIDw8IDE7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMudWlhdXRvbWF0b3IyLmp3cHJveHkuY29tbWFuZCgnL25ldHdvcmtfY29ubmVjdGlvbicsICdQT1NUJywge3R5cGV9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2cuZXJyb3IoYFVuYWJsZSB0byBzZXQgTmV0d29yayBjb25uZWN0aW9uIHRvIFdJRkksIHJldHJ5aW5nIHdpdGggYWRiIGNvbW1hbmQuIEVSUk9SOjogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgIGF3YWl0IHRoaXMuYWRiLnNldFdpZmlTdGF0ZSh3aWZpKTtcbiAgfVxufTtcblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBjb21tYW5kcyk7XG5leHBvcnQgeyBjb21tYW5kcyB9O1xuZXhwb3J0IGRlZmF1bHQgZXh0ZW5zaW9ucztcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
