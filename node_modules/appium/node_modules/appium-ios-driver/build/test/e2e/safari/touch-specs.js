'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _helpersSession = require('../helpers/session');

/**
 * touch command doesn't work
 */
describe.skip('touch', function () {
  var _this = this;

  this.timeout(_helpersSession.MOCHA_SAFARI_TIMEOUT);

  var driver = (0, _setupBase2['default'])(this, {
    browserName: "safari"
  }, {
    noReset: true
  }).driver;

  it('should flick element', function callee$1$0() {
    var flickElem, l1, dx, dy, l2;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.setUrl(_helpersEnv2['default'].TEST_END_POINT + 'touch.html'));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'flickElem'));

        case 4:
          flickElem = context$2$0.sent;
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.getLocation(flickElem));

        case 7:
          l1 = context$2$0.sent;
          dx = 30, dy = 30;
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'flickElem'));

        case 11:
          flickElem = context$2$0.sent;
          context$2$0.next = 14;
          return _regeneratorRuntime.awrap(driver.flick(flickElem, dx, dy, 0));

        case 14:
          context$2$0.next = 16;
          return _regeneratorRuntime.awrap(_bluebird2['default'].delay(1000));

        case 16:
          context$2$0.next = 18;
          return _regeneratorRuntime.awrap(driver.getLocation(flickElem));

        case 18:
          l2 = context$2$0.sent;

          // UI Atomation's flickFromTo() seems to be not prices enough.
          // And in most cases safari receives the last touchmove event
          // with the coordinates which are by one pixel less than desired
          // destination. Hence allow some deviation here.
          l2.x.should.be.within(l1.x + dx - 2, l1.x + dx + 2);
          l2.y.should.be.within(l1.y + dy - 2, l1.y + dy + 2);

        case 21:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should not be able to do native touch actions', function callee$1$0() {
    var el, gestures;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

        case 2:
          el = context$2$0.sent;
          gestures = [{ action: 'press', options: { element: el } }, { action: 'release' }];
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.performTouch(gestures).should.eventually.be.rejected);

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS90b3VjaC1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7eUJBQWtCLGVBQWU7Ozs7MEJBQ2pCLGdCQUFnQjs7Ozt3QkFDbEIsVUFBVTs7Ozs4QkFDYSxvQkFBb0I7Ozs7O0FBTXpELFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFlBQVk7OztBQUNqQyxNQUFJLENBQUMsT0FBTyxzQ0FBc0IsQ0FBQzs7QUFFbkMsTUFBTSxNQUFNLEdBQUcsNEJBQU0sSUFBSSxFQUFFO0FBQ3pCLGVBQVcsRUFBRSxRQUFRO0dBQ3RCLEVBQUU7QUFDRCxXQUFPLEVBQUUsSUFBSTtHQUNkLENBQUMsQ0FBQyxNQUFNLENBQUM7O0FBRVYsSUFBRSxDQUFDLHNCQUFzQixFQUFFO1FBRXJCLFNBQVMsRUFFVCxFQUFFLEVBQ0YsRUFBRSxFQUFPLEVBQUUsRUFNWCxFQUFFOzs7OzsyQ0FWQSxNQUFNLENBQUMsTUFBTSxDQUFJLHdCQUFJLGNBQWMsZ0JBQWE7Ozs7MkNBQ2hDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQzs7O0FBQXZELG1CQUFTOzsyQ0FFRSxNQUFNLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQzs7O0FBQXhDLFlBQUU7QUFDRixZQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFOzsyQ0FFRixNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUM7OztBQUF2RCxtQkFBUzs7MkNBQ0gsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7Ozs7MkNBQ2xDLHNCQUFFLEtBQUssQ0FBQyxJQUFJLENBQUM7Ozs7MkNBRUosTUFBTSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUM7OztBQUF4QyxZQUFFOzs7Ozs7QUFNTixZQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNwRCxZQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQzs7Ozs7OztHQUNyRCxDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLCtDQUErQyxFQUFFO1FBQzlDLEVBQUUsRUFDRixRQUFROzs7OzsyQ0FERyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUM7OztBQUEvQyxZQUFFO0FBQ0Ysa0JBQVEsR0FBRyxDQUNiLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsRUFBQyxPQUFPLEVBQUUsRUFBRSxFQUFDLEVBQUMsRUFDekMsRUFBQyxNQUFNLEVBQUUsU0FBUyxFQUFDLENBQ3BCOzsyQ0FDSyxNQUFNLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFFBQVE7Ozs7Ozs7R0FDbEUsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZTJlL3NhZmFyaS90b3VjaC1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzZXR1cCBmcm9tIFwiLi4vc2V0dXAtYmFzZVwiO1xuaW1wb3J0IGVudiBmcm9tICcuLi9oZWxwZXJzL2Vudic7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5pbXBvcnQgeyBNT0NIQV9TQUZBUklfVElNRU9VVCB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5cblxuLyoqXG4gKiB0b3VjaCBjb21tYW5kIGRvZXNuJ3Qgd29ya1xuICovXG5kZXNjcmliZS5za2lwKCd0b3VjaCcsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KE1PQ0hBX1NBRkFSSV9USU1FT1VUKTtcblxuICBjb25zdCBkcml2ZXIgPSBzZXR1cCh0aGlzLCB7XG4gICAgYnJvd3Nlck5hbWU6IFwic2FmYXJpXCJcbiAgfSwge1xuICAgIG5vUmVzZXQ6IHRydWVcbiAgfSkuZHJpdmVyO1xuXG4gIGl0KCdzaG91bGQgZmxpY2sgZWxlbWVudCcsIGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBkcml2ZXIuc2V0VXJsKGAke2Vudi5URVNUX0VORF9QT0lOVH10b3VjaC5odG1sYCk7XG4gICAgbGV0IGZsaWNrRWxlbSA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAnZmxpY2tFbGVtJyk7XG5cbiAgICBsZXQgbDEgPSBhd2FpdCBkcml2ZXIuZ2V0TG9jYXRpb24oZmxpY2tFbGVtKTtcbiAgICBsZXQgZHggPSAzMCwgZHkgPSAzMDtcblxuICAgIGZsaWNrRWxlbSA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAnZmxpY2tFbGVtJyk7XG4gICAgYXdhaXQgZHJpdmVyLmZsaWNrKGZsaWNrRWxlbSwgZHgsIGR5LCAwKTtcbiAgICBhd2FpdCBCLmRlbGF5KDEwMDApO1xuXG4gICAgbGV0IGwyID0gYXdhaXQgZHJpdmVyLmdldExvY2F0aW9uKGZsaWNrRWxlbSk7XG5cbiAgICAvLyBVSSBBdG9tYXRpb24ncyBmbGlja0Zyb21UbygpIHNlZW1zIHRvIGJlIG5vdCBwcmljZXMgZW5vdWdoLlxuICAgIC8vIEFuZCBpbiBtb3N0IGNhc2VzIHNhZmFyaSByZWNlaXZlcyB0aGUgbGFzdCB0b3VjaG1vdmUgZXZlbnRcbiAgICAvLyB3aXRoIHRoZSBjb29yZGluYXRlcyB3aGljaCBhcmUgYnkgb25lIHBpeGVsIGxlc3MgdGhhbiBkZXNpcmVkXG4gICAgLy8gZGVzdGluYXRpb24uIEhlbmNlIGFsbG93IHNvbWUgZGV2aWF0aW9uIGhlcmUuXG4gICAgbDIueC5zaG91bGQuYmUud2l0aGluKGwxLnggKyBkeCAtIDIsIGwxLnggKyBkeCArIDIpO1xuICAgIGwyLnkuc2hvdWxkLmJlLndpdGhpbihsMS55ICsgZHkgLSAyLCBsMS55ICsgZHkgKyAyKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBub3QgYmUgYWJsZSB0byBkbyBuYXRpdmUgdG91Y2ggYWN0aW9ucycsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgZWwgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2lkJywgJ2NvbW1lbnRzJyk7XG4gICAgbGV0IGdlc3R1cmVzID0gW1xuICAgICAge2FjdGlvbjogJ3ByZXNzJywgb3B0aW9uczoge2VsZW1lbnQ6IGVsfX0sXG4gICAgICB7YWN0aW9uOiAncmVsZWFzZSd9XG4gICAgXTtcbiAgICBhd2FpdCBkcml2ZXIucGVyZm9ybVRvdWNoKGdlc3R1cmVzKS5zaG91bGQuZXZlbnR1YWxseS5iZS5yZWplY3RlZDtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
