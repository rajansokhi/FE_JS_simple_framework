'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _helpersSession = require('../helpers/session');

describe('safari - basics @skip-real-device', function () {
  this.timeout(_helpersSession.MOCHA_SAFARI_TIMEOUT);

  if (!(_helpersEnv2['default'].IOS8 || _helpersEnv2['default'].IOS9) && _helpersEnv2['default'].IOS80) {
    return describe('default init', function () {
      var _this = this;

      var driver = (0, _setupBase2['default'])(this, { browserName: 'safari' }).driver;

      it('it should use safari default init page', function callee$2$0() {
        return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
          while (1) switch (context$3$0.prev = context$3$0.next) {
            case 0:
              context$3$0.next = 2;
              return _regeneratorRuntime.awrap(driver.getPageSource());

            case 2:
              context$3$0.sent.should.include('Apple');

            case 3:
            case 'end':
              return context$3$0.stop();
          }
        }, null, _this);
      });
    });
  }

  describe('default init', function () {
    var _this2 = this;

    var driver = (0, _setupBase2['default'])(this, { browserName: 'safari' }).driver;

    it('it should use appium default init page', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getPageSource());

          case 2:
            context$3$0.sent.should.include('Let\'s browse!');

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });

  describe('init with safariInitialUrl', function () {
    var _this3 = this;

    var driver = (0, _setupBase2['default'])(this, {
      browserName: 'safari',
      safariInitialUrl: _helpersEnv2['default'].GUINEA_TEST_END_POINT
    }).driver;

    it('should go to the requested page', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getPageSource());

          case 2:
            context$3$0.sent.should.include('I am some page content');

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS9iYXNpY3Mtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O3lCQUFrQixlQUFlOzs7OzBCQUNqQixnQkFBZ0I7Ozs7OEJBQ0ssb0JBQW9COztBQUd6RCxRQUFRLENBQUMsbUNBQW1DLEVBQUUsWUFBWTtBQUN4RCxNQUFJLENBQUMsT0FBTyxzQ0FBc0IsQ0FBQzs7QUFFbkMsTUFBSSxFQUFFLHdCQUFJLElBQUksSUFBSSx3QkFBSSxJQUFJLENBQUEsQUFBQyxJQUFJLHdCQUFJLEtBQUssRUFBRTtBQUN4QyxXQUFPLFFBQVEsQ0FBQyxjQUFjLEVBQUUsWUFBWTs7O0FBQzFDLFVBQU0sTUFBTSxHQUFHLDRCQUFNLElBQUksRUFBRSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQzs7QUFFN0QsUUFBRSxDQUFDLHdDQUF3QyxFQUFFOzs7OzsrQ0FDcEMsTUFBTSxDQUFDLGFBQWEsRUFBRTs7OytCQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTzs7Ozs7OztPQUN0RCxDQUFDLENBQUM7S0FDSixDQUFDLENBQUM7R0FDSjs7QUFFRCxVQUFRLENBQUMsY0FBYyxFQUFFLFlBQVk7OztBQUNuQyxRQUFNLE1BQU0sR0FBRyw0QkFBTSxJQUFJLEVBQUUsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUM7O0FBRTdELE1BQUUsQ0FBQyx3Q0FBd0MsRUFBRTs7Ozs7NkNBQ3BDLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs2QkFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFnQjs7Ozs7OztLQUMvRCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLDRCQUE0QixFQUFFLFlBQVk7OztBQUNqRCxRQUFNLE1BQU0sR0FBRyw0QkFBTSxJQUFJLEVBQUU7QUFDekIsaUJBQVcsRUFBRSxRQUFRO0FBQ3JCLHNCQUFnQixFQUFFLHdCQUFJLHFCQUFxQjtLQUM1QyxDQUFDLENBQUMsTUFBTSxDQUFDOztBQUVWLE1BQUUsQ0FBQyxpQ0FBaUMsRUFBRTs7Ozs7NkNBQzdCLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs2QkFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLHdCQUF3Qjs7Ozs7OztLQUN2RSxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvc2FmYXJpL2Jhc2ljcy1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzZXR1cCBmcm9tIFwiLi4vc2V0dXAtYmFzZVwiO1xuaW1wb3J0IGVudiBmcm9tICcuLi9oZWxwZXJzL2Vudic7XG5pbXBvcnQgeyBNT0NIQV9TQUZBUklfVElNRU9VVCB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5cblxuZGVzY3JpYmUoJ3NhZmFyaSAtIGJhc2ljcyBAc2tpcC1yZWFsLWRldmljZScsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KE1PQ0hBX1NBRkFSSV9USU1FT1VUKTtcblxuICBpZiAoIShlbnYuSU9TOCB8fCBlbnYuSU9TOSkgJiYgZW52LklPUzgwKSB7XG4gICAgcmV0dXJuIGRlc2NyaWJlKCdkZWZhdWx0IGluaXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCBkcml2ZXIgPSBzZXR1cCh0aGlzLCB7IGJyb3dzZXJOYW1lOiAnc2FmYXJpJyB9KS5kcml2ZXI7XG5cbiAgICAgIGl0KCdpdCBzaG91bGQgdXNlIHNhZmFyaSBkZWZhdWx0IGluaXQgcGFnZScsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKGF3YWl0IGRyaXZlci5nZXRQYWdlU291cmNlKCkpLnNob3VsZC5pbmNsdWRlKCdBcHBsZScpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBkZXNjcmliZSgnZGVmYXVsdCBpbml0JywgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGRyaXZlciA9IHNldHVwKHRoaXMsIHsgYnJvd3Nlck5hbWU6ICdzYWZhcmknIH0pLmRyaXZlcjtcblxuICAgIGl0KCdpdCBzaG91bGQgdXNlIGFwcGl1bSBkZWZhdWx0IGluaXQgcGFnZScsIGFzeW5jICgpID0+IHtcbiAgICAgIChhd2FpdCBkcml2ZXIuZ2V0UGFnZVNvdXJjZSgpKS5zaG91bGQuaW5jbHVkZSgnTGV0XFwncyBicm93c2UhJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdpbml0IHdpdGggc2FmYXJpSW5pdGlhbFVybCcsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBkcml2ZXIgPSBzZXR1cCh0aGlzLCB7XG4gICAgICBicm93c2VyTmFtZTogJ3NhZmFyaScsXG4gICAgICBzYWZhcmlJbml0aWFsVXJsOiBlbnYuR1VJTkVBX1RFU1RfRU5EX1BPSU5UXG4gICAgfSkuZHJpdmVyO1xuXG4gICAgaXQoJ3Nob3VsZCBnbyB0byB0aGUgcmVxdWVzdGVkIHBhZ2UnLCBhc3luYyAoKSA9PiB7XG4gICAgICAoYXdhaXQgZHJpdmVyLmdldFBhZ2VTb3VyY2UoKSkuc2hvdWxkLmluY2x1ZGUoJ0kgYW0gc29tZSBwYWdlIGNvbnRlbnQnKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
