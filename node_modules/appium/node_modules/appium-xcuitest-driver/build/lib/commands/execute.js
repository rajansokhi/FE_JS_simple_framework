'use strict';

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumIosDriver = require('appium-ios-driver');

var _appiumBaseDriver = require('appium-base-driver');

var extensions = {};

_Object$assign(extensions, _appiumIosDriver.iosCommands.execute);

var iosExecute = extensions.execute;
extensions.execute = function callee$0$0(script, args) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!(!script.match(/^mobile\:/) && !this.isWebContext())) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(iosExecute.call(this, script, args));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

var iosExecuteAsync = extensions.executeAsync;
extensions.executeAsync = function callee$0$0(script, args, sessionId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.isWebContext()) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(iosExecuteAsync.call(this, script, args, sessionId));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

// Overrides the 'executeMobile' function defined in appium-ios-driver
extensions.executeMobile = function callee$0$0(mobileCommand) {
  var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
  var mobileCommandsMapping;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    var _this = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        mobileCommandsMapping = {
          scroll: function scroll(x) {
            return _regeneratorRuntime.async(function scroll$(context$2$0) {
              while (1) switch (context$2$0.prev = context$2$0.next) {
                case 0:
                  context$2$0.next = 2;
                  return _regeneratorRuntime.awrap(this.mobileScroll(x));

                case 2:
                case 'end':
                  return context$2$0.stop();
              }
            }, null, _this);
          },
          swipe: function swipe(x) {
            return _regeneratorRuntime.async(function swipe$(context$2$0) {
              while (1) switch (context$2$0.prev = context$2$0.next) {
                case 0:
                  context$2$0.next = 2;
                  return _regeneratorRuntime.awrap(this.mobileScroll(x, true));

                case 2:
                case 'end':
                  return context$2$0.stop();
              }
            }, null, _this);
          },
          pinch: function pinch(x) {
            return _regeneratorRuntime.async(function pinch$(context$2$0) {
              while (1) switch (context$2$0.prev = context$2$0.next) {
                case 0:
                  context$2$0.next = 2;
                  return _regeneratorRuntime.awrap(this.mobilePinch(x));

                case 2:
                case 'end':
                  return context$2$0.stop();
              }
            }, null, _this);
          },
          doubleTap: function doubleTap(x) {
            return _regeneratorRuntime.async(function doubleTap$(context$2$0) {
              while (1) switch (context$2$0.prev = context$2$0.next) {
                case 0:
                  context$2$0.next = 2;
                  return _regeneratorRuntime.awrap(this.mobileDoubleTap(x));

                case 2:
                case 'end':
                  return context$2$0.stop();
              }
            }, null, _this);
          },
          twoFingerTap: function twoFingerTap(x) {
            return _regeneratorRuntime.async(function twoFingerTap$(context$2$0) {
              while (1) switch (context$2$0.prev = context$2$0.next) {
                case 0:
                  context$2$0.next = 2;
                  return _regeneratorRuntime.awrap(this.mobileTwoFingerTap(x));

                case 2:
                case 'end':
                  return context$2$0.stop();
              }
            }, null, _this);
          },
          touchAndHold: function touchAndHold(x) {
            return _regeneratorRuntime.async(function touchAndHold$(context$2$0) {
              while (1) switch (context$2$0.prev = context$2$0.next) {
                case 0:
                  context$2$0.next = 2;
                  return _regeneratorRuntime.awrap(this.mobileTouchAndHold(x));

                case 2:
                case 'end':
                  return context$2$0.stop();
              }
            }, null, _this);
          },
          tap: function tap(x) {
            return _regeneratorRuntime.async(function tap$(context$2$0) {
              while (1) switch (context$2$0.prev = context$2$0.next) {
                case 0:
                  context$2$0.next = 2;
                  return _regeneratorRuntime.awrap(this.mobileTap(x));

                case 2:
                case 'end':
                  return context$2$0.stop();
              }
            }, null, _this);
          },
          dragFromToForDuration: function dragFromToForDuration(x) {
            return _regeneratorRuntime.async(function dragFromToForDuration$(context$2$0) {
              while (1) switch (context$2$0.prev = context$2$0.next) {
                case 0:
                  context$2$0.next = 2;
                  return _regeneratorRuntime.awrap(this.mobileDragFromToForDuration(x));

                case 2:
                case 'end':
                  return context$2$0.stop();
              }
            }, null, _this);
          }
        };

        if (_lodash2['default'].has(mobileCommandsMapping, mobileCommand)) {
          context$1$0.next = 3;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownCommandError('Unknown mobile command "' + mobileCommand + '". Only ' + _lodash2['default'].keys(mobileCommandsMapping) + ' commands are supported.');

      case 3:
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(mobileCommandsMapping[mobileCommand](opts));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

exports['default'] = extensions;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9leGVjdXRlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztzQkFBYyxRQUFROzs7OytCQUNNLG1CQUFtQjs7Z0NBQ3hCLG9CQUFvQjs7QUFHM0MsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDOztBQUVwQixlQUFjLFVBQVUsRUFBRSw2QkFBWSxPQUFPLENBQUMsQ0FBQzs7QUFFL0MsSUFBTSxVQUFVLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQztBQUN0QyxVQUFVLENBQUMsT0FBTyxHQUFHLG9CQUFnQixNQUFNLEVBQUUsSUFBSTs7OztjQUMzQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUE7Ozs7O2NBQzlDLElBQUkseUJBQU8sbUJBQW1CLEVBQUU7Ozs7eUNBRzNCLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUM7Ozs7Ozs7Ozs7Q0FDakQsQ0FBQzs7QUFFRixJQUFNLGVBQWUsR0FBRyxVQUFVLENBQUMsWUFBWSxDQUFDO0FBQ2hELFVBQVUsQ0FBQyxZQUFZLEdBQUcsb0JBQWdCLE1BQU0sRUFBRSxJQUFJLEVBQUUsU0FBUzs7OztZQUMxRCxJQUFJLENBQUMsWUFBWSxFQUFFOzs7OztjQUNoQixJQUFJLHlCQUFPLG1CQUFtQixFQUFFOzs7O3lDQUczQixlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FBQzs7Ozs7Ozs7OztDQUNqRSxDQUFDOzs7QUFHRixVQUFVLENBQUMsYUFBYSxHQUFHLG9CQUFnQixhQUFhO01BQUUsSUFBSSx5REFBQyxFQUFFO01BQ3pELHFCQUFxQjs7Ozs7O0FBQXJCLDZCQUFxQixHQUFHO0FBQzVCLGdCQUFNLEVBQUUsZ0JBQU8sQ0FBQzs7Ozs7bURBQVksSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7Ozs7Ozs7V0FBRTtBQUNsRCxlQUFLLEVBQUUsZUFBTyxDQUFDOzs7OzttREFBWSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUM7Ozs7Ozs7V0FBRTtBQUN2RCxlQUFLLEVBQUUsZUFBTyxDQUFDOzs7OzttREFBWSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs7Ozs7OztXQUFFO0FBQ2hELG1CQUFTLEVBQUUsbUJBQU8sQ0FBQzs7Ozs7bURBQVksSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7Ozs7Ozs7V0FBRTtBQUN4RCxzQkFBWSxFQUFFLHNCQUFPLENBQUM7Ozs7O21EQUFZLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7Ozs7Ozs7V0FBRTtBQUM5RCxzQkFBWSxFQUFFLHNCQUFPLENBQUM7Ozs7O21EQUFZLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7Ozs7Ozs7V0FBRTtBQUM5RCxhQUFHLEVBQUUsYUFBTyxDQUFDOzs7OzttREFBWSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQzs7Ozs7OztXQUFFO0FBQzVDLCtCQUFxQixFQUFFLCtCQUFPLENBQUM7Ozs7O21EQUFZLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLENBQUM7Ozs7Ozs7V0FBRTtTQUNqRjs7WUFFSSxvQkFBRSxHQUFHLENBQUMscUJBQXFCLEVBQUUsYUFBYSxDQUFDOzs7OztjQUN4QyxJQUFJLHlCQUFPLG1CQUFtQiw4QkFBNEIsYUFBYSxnQkFBVyxvQkFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsOEJBQTJCOzs7O3lDQUVySSxxQkFBcUIsQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7Ozs7Q0FDeEQsQ0FBQzs7cUJBRWEsVUFBVSIsImZpbGUiOiJsaWIvY29tbWFuZHMvZXhlY3V0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBpb3NDb21tYW5kcyB9IGZyb20gJ2FwcGl1bS1pb3MtZHJpdmVyJztcbmltcG9ydCB7IGVycm9ycyB9IGZyb20gJ2FwcGl1bS1iYXNlLWRyaXZlcic7XG5cblxubGV0IGV4dGVuc2lvbnMgPSB7fTtcblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBpb3NDb21tYW5kcy5leGVjdXRlKTtcblxuY29uc3QgaW9zRXhlY3V0ZSA9IGV4dGVuc2lvbnMuZXhlY3V0ZTtcbmV4dGVuc2lvbnMuZXhlY3V0ZSA9IGFzeW5jIGZ1bmN0aW9uIChzY3JpcHQsIGFyZ3MpIHtcbiAgaWYgKCFzY3JpcHQubWF0Y2goL15tb2JpbGVcXDovKSAmJiAhdGhpcy5pc1dlYkNvbnRleHQoKSkge1xuICAgIHRocm93IG5ldyBlcnJvcnMuTm90SW1wbGVtZW50ZWRFcnJvcigpO1xuICB9XG5cbiAgcmV0dXJuIGF3YWl0IGlvc0V4ZWN1dGUuY2FsbCh0aGlzLCBzY3JpcHQsIGFyZ3MpO1xufTtcblxuY29uc3QgaW9zRXhlY3V0ZUFzeW5jID0gZXh0ZW5zaW9ucy5leGVjdXRlQXN5bmM7XG5leHRlbnNpb25zLmV4ZWN1dGVBc3luYyA9IGFzeW5jIGZ1bmN0aW9uIChzY3JpcHQsIGFyZ3MsIHNlc3Npb25JZCkge1xuICBpZiAoIXRoaXMuaXNXZWJDb250ZXh0KCkpIHtcbiAgICB0aHJvdyBuZXcgZXJyb3JzLk5vdEltcGxlbWVudGVkRXJyb3IoKTtcbiAgfVxuXG4gIHJldHVybiBhd2FpdCBpb3NFeGVjdXRlQXN5bmMuY2FsbCh0aGlzLCBzY3JpcHQsIGFyZ3MsIHNlc3Npb25JZCk7XG59O1xuXG4vLyBPdmVycmlkZXMgdGhlICdleGVjdXRlTW9iaWxlJyBmdW5jdGlvbiBkZWZpbmVkIGluIGFwcGl1bS1pb3MtZHJpdmVyXG5leHRlbnNpb25zLmV4ZWN1dGVNb2JpbGUgPSBhc3luYyBmdW5jdGlvbiAobW9iaWxlQ29tbWFuZCwgb3B0cz17fSkge1xuICBjb25zdCBtb2JpbGVDb21tYW5kc01hcHBpbmcgPSB7XG4gICAgc2Nyb2xsOiBhc3luYyAoeCkgPT4ge2F3YWl0IHRoaXMubW9iaWxlU2Nyb2xsKHgpO30sXG4gICAgc3dpcGU6IGFzeW5jICh4KSA9PiB7YXdhaXQgdGhpcy5tb2JpbGVTY3JvbGwoeCwgdHJ1ZSk7fSxcbiAgICBwaW5jaDogYXN5bmMgKHgpID0+IHthd2FpdCB0aGlzLm1vYmlsZVBpbmNoKHgpO30sXG4gICAgZG91YmxlVGFwOiBhc3luYyAoeCkgPT4ge2F3YWl0IHRoaXMubW9iaWxlRG91YmxlVGFwKHgpO30sXG4gICAgdHdvRmluZ2VyVGFwOiBhc3luYyAoeCkgPT4ge2F3YWl0IHRoaXMubW9iaWxlVHdvRmluZ2VyVGFwKHgpO30sXG4gICAgdG91Y2hBbmRIb2xkOiBhc3luYyAoeCkgPT4ge2F3YWl0IHRoaXMubW9iaWxlVG91Y2hBbmRIb2xkKHgpO30sXG4gICAgdGFwOiBhc3luYyAoeCkgPT4ge2F3YWl0IHRoaXMubW9iaWxlVGFwKHgpO30sXG4gICAgZHJhZ0Zyb21Ub0ZvckR1cmF0aW9uOiBhc3luYyAoeCkgPT4ge2F3YWl0IHRoaXMubW9iaWxlRHJhZ0Zyb21Ub0ZvckR1cmF0aW9uKHgpO31cbiAgfTtcblxuICBpZiAoIV8uaGFzKG1vYmlsZUNvbW1hbmRzTWFwcGluZywgbW9iaWxlQ29tbWFuZCkpIHtcbiAgICB0aHJvdyBuZXcgZXJyb3JzLlVua25vd25Db21tYW5kRXJyb3IoYFVua25vd24gbW9iaWxlIGNvbW1hbmQgXCIke21vYmlsZUNvbW1hbmR9XCIuIE9ubHkgJHtfLmtleXMobW9iaWxlQ29tbWFuZHNNYXBwaW5nKX0gY29tbWFuZHMgYXJlIHN1cHBvcnRlZC5gKTtcbiAgfVxuICByZXR1cm4gYXdhaXQgbW9iaWxlQ29tbWFuZHNNYXBwaW5nW21vYmlsZUNvbW1hbmRdKG9wdHMpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZXh0ZW5zaW9ucztcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
