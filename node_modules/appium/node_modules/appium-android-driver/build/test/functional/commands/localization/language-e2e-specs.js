'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _appiumAdb = require('appium-adb');

var _appiumAdb2 = _interopRequireDefault(_appiumAdb);

var _ = require('../../../..');

var _2 = _interopRequireDefault(_);

var _desired = require('../../desired');

var _desired2 = _interopRequireDefault(_desired);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('Localization - locale @skip-ci @skip-real-device', function () {
  var _this = this;

  var driver = undefined;
  beforeEach(function callee$1$0() {
    var adb;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          adb = new _appiumAdb2['default']();
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(adb.getApiLevel());

        case 3:
          context$2$0.t0 = context$2$0.sent;

          if (!(context$2$0.t0 > 23)) {
            context$2$0.next = 6;
            break;
          }

          this.skip();

        case 6:
          driver = new _2['default']();

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!driver) {
            context$2$0.next = 5;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.adb.setDeviceCountry('US'));

        case 3:
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  function getLocale(adb) {
    return _regeneratorRuntime.async(function getLocale$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(adb.getApiLevel());

        case 2:
          context$2$0.t0 = context$2$0.sent;

          if (!(context$2$0.t0 < 23)) {
            context$2$0.next = 9;
            break;
          }

          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(adb.getDeviceCountry());

        case 6:
          return context$2$0.abrupt('return', context$2$0.sent);

        case 9:
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.adb.getDeviceLocale());

        case 11:
          return context$2$0.abrupt('return', context$2$0.sent);

        case 12:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  it('should start as FR', function callee$1$0() {
    var frCaps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          frCaps = _Object$assign({}, _desired2['default'], { locale: 'FR' });
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.createSession(frCaps));

        case 3:
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(getLocale(driver.adb).should.eventually.equal('FR'));

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should start as US', function callee$1$0() {
    var usCaps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          usCaps = _Object$assign({}, _desired2['default'], { locale: 'US' });
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.createSession(usCaps));

        case 3:
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(getLocale(driver.adb).should.eventually.equal('US'));

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});

// restarting doesn't work on Android 7
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9sb2NhbGl6YXRpb24vbGFuZ3VhZ2UtZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O29CQUFpQixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7Ozt5QkFDN0IsWUFBWTs7OztnQkFDRixhQUFhOzs7O3VCQUNkLGVBQWU7Ozs7QUFHeEMsa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixRQUFRLENBQUMsa0RBQWtELEVBQUUsWUFBWTs7O0FBQ3ZFLE1BQUksTUFBTSxZQUFBLENBQUM7QUFDWCxZQUFVLENBQUM7UUFFTCxHQUFHOzs7O0FBQUgsYUFBRyxHQUFHLDRCQUFTOzsyQ0FDVCxHQUFHLENBQUMsV0FBVyxFQUFFOzs7OztpQ0FBRyxFQUFFOzs7OztBQUFFLGNBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQzs7O0FBRTlDLGdCQUFNLEdBQUcsbUJBQW1CLENBQUM7Ozs7Ozs7R0FDOUIsQ0FBQyxDQUFDO0FBQ0gsT0FBSyxDQUFDOzs7O2VBQ0EsTUFBTTs7Ozs7OzJDQUNGLE1BQU0sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDOzs7OzJDQUVqQyxNQUFNLENBQUMsYUFBYSxFQUFFOzs7Ozs7O0dBRS9CLENBQUMsQ0FBQzs7QUFFSCxXQUFlLFNBQVMsQ0FBRSxHQUFHOzs7OzsyQ0FDakIsR0FBRyxDQUFDLFdBQVcsRUFBRTs7Ozs7aUNBQUcsRUFBRTs7Ozs7OzJDQUNqQixHQUFHLENBQUMsZ0JBQWdCLEVBQUU7Ozs7Ozs7MkNBRXRCLE1BQU0sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFOzs7Ozs7Ozs7O0dBRTVDOztBQUVELElBQUUsQ0FBQyxvQkFBb0IsRUFBRTtRQUNuQixNQUFNOzs7O0FBQU4sZ0JBQU0sR0FBRyxlQUFjLEVBQUUsd0JBQWdCLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQyxDQUFDOzsyQ0FDdEQsTUFBTSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUM7Ozs7MkNBQzVCLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0dBQzFELENBQUMsQ0FBQztBQUNILElBQUUsQ0FBQyxvQkFBb0IsRUFBRTtRQUNuQixNQUFNOzs7O0FBQU4sZ0JBQU0sR0FBRyxlQUFjLEVBQUUsd0JBQWdCLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQyxDQUFDOzsyQ0FDdEQsTUFBTSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUM7Ozs7MkNBQzVCLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0dBQzFELENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZHMvbG9jYWxpemF0aW9uL2xhbmd1YWdlLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IEFEQiBmcm9tICdhcHBpdW0tYWRiJztcbmltcG9ydCBBbmRyb2lkRHJpdmVyIGZyb20gJy4uLy4uLy4uLy4uJztcbmltcG9ydCBERUZBVUxUX0NBUFMgZnJvbSAnLi4vLi4vZGVzaXJlZCc7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ0xvY2FsaXphdGlvbiAtIGxvY2FsZSBAc2tpcC1jaSBAc2tpcC1yZWFsLWRldmljZScsIGZ1bmN0aW9uICgpIHtcbiAgbGV0IGRyaXZlcjtcbiAgYmVmb3JlRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgLy8gcmVzdGFydGluZyBkb2Vzbid0IHdvcmsgb24gQW5kcm9pZCA3XG4gICAgbGV0IGFkYiA9IG5ldyBBREIoKTtcbiAgICBpZiAoYXdhaXQgYWRiLmdldEFwaUxldmVsKCkgPiAyMykgdGhpcy5za2lwKCk7XG5cbiAgICBkcml2ZXIgPSBuZXcgQW5kcm9pZERyaXZlcigpO1xuICB9KTtcbiAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xuICAgIGlmIChkcml2ZXIpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5hZGIuc2V0RGV2aWNlQ291bnRyeSgnVVMnKTtcblxuICAgICAgYXdhaXQgZHJpdmVyLmRlbGV0ZVNlc3Npb24oKTtcbiAgICB9XG4gIH0pO1xuXG4gIGFzeW5jIGZ1bmN0aW9uIGdldExvY2FsZSAoYWRiKSB7XG4gICAgaWYgKGF3YWl0IGFkYi5nZXRBcGlMZXZlbCgpIDwgMjMpIHtcbiAgICAgIHJldHVybiBhd2FpdCBhZGIuZ2V0RGV2aWNlQ291bnRyeSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYXdhaXQgZHJpdmVyLmFkYi5nZXREZXZpY2VMb2NhbGUoKTtcbiAgICB9XG4gIH1cblxuICBpdCgnc2hvdWxkIHN0YXJ0IGFzIEZSJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBmckNhcHMgPSBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0NBUFMsIHtsb2NhbGU6ICdGUid9KTtcbiAgICBhd2FpdCBkcml2ZXIuY3JlYXRlU2Vzc2lvbihmckNhcHMpO1xuICAgIGF3YWl0IGdldExvY2FsZShkcml2ZXIuYWRiKS5zaG91bGQuZXZlbnR1YWxseS5lcXVhbCgnRlInKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgc3RhcnQgYXMgVVMnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IHVzQ2FwcyA9IE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfQ0FQUywge2xvY2FsZTogJ1VTJ30pO1xuICAgIGF3YWl0IGRyaXZlci5jcmVhdGVTZXNzaW9uKHVzQ2Fwcyk7XG4gICAgYXdhaXQgZ2V0TG9jYWxlKGRyaXZlci5hZGIpLnNob3VsZC5ldmVudHVhbGx5LmVxdWFsKCdVUycpO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi8uLiJ9
